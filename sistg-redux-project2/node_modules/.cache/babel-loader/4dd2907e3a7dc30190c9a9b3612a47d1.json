{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\"; // 비동기화 플젝 짤 때 부르는 라이브러리\n\nimport rootReducer from '../reducers';\nimport { createLogger } from \"redux-logger/src\"; // foods:foodReducer 호출\n\n/*\r\n[Store] : 전역변수 개념으로 생각하면 됨. <-------News.js\r\n- action                                     [Store]\r\n- reducer                           오히려 전역변수로 값을 보내서 변경값을 처리하는 편이 효율적\r\n- state                            <-------Recipe.js\r\n                                            [Store]\r\n */\n\nconst logger = createLogger();\nconst initialState = {};\nconst middleware = [thunk, logger];\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/sist/WebstormProjects/sistg-redux-project2/sistg-redux-project2/src/store/store.js"],"names":["createStore","applyMiddleware","compose","thunk","rootReducer","createLogger","logger","initialState","middleware","store"],"mappings":"AAAA,SAAOA,WAAP,EAAmBC,eAAnB,EAAmCC,OAAnC,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAAsD;;AACtD,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAAQC,YAAR,QAA2B,kBAA3B,C,CAAqD;;AAErD;;;;;;;;AAOA,MAAMC,MAAM,GAACD,YAAY,EAAzB;AACA,MAAME,YAAY,GAAC,EAAnB;AAEA,MAAMC,UAAU,GAAC,CAACL,KAAD,EAAOG,MAAP,CAAjB;AAEA,MAAMG,KAAK,GAACT,WAAW,CACnBI,WADmB,EAEnBG,YAFmB,EAGnBL,OAAO,CACHD,eAAe,CAAC,GAAGO,UAAJ,CADZ,CAHY,CAAvB;AAOA,eAAeC,KAAf","sourcesContent":["import{createStore,applyMiddleware,compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";                      // 비동기화 플젝 짤 때 부르는 라이브러리\r\nimport rootReducer from '../reducers'\r\nimport {createLogger} from \"redux-logger/src\";       // foods:foodReducer 호출\r\n\r\n/*\r\n[Store] : 전역변수 개념으로 생각하면 됨. <-------News.js\r\n- action                                     [Store]\r\n- reducer                           오히려 전역변수로 값을 보내서 변경값을 처리하는 편이 효율적\r\n- state                            <-------Recipe.js\r\n                                            [Store]\r\n */\r\nconst logger=createLogger();\r\nconst initialState={}\r\n\r\nconst middleware=[thunk,logger];\r\n\r\nconst store=createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n    )\r\n)\r\nexport default store;"]},"metadata":{},"sourceType":"module"}